.build::common:
  stage: docker
  image: docker:latest
  variables:
    # When using dind service, you must instruct Docker to talk with
    # the daemon started inside of the service. The daemon is available
    # with a network connection instead of the default
    # /var/run/docker.sock socket.
    DOCKER_HOST: tcp://docker:2376
    #
    # The 'docker' hostname is the alias of the service container as described at
    # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
    #
    # Specify to Docker where to create the certificates. Docker
    # creates them automatically on boot, and creates
    # `/certs/client` to share between the service and job
    # container, thanks to volume mount from config.toml
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2

  services:
    - name: docker:dind
      variables:
        HEALTHCHECK_TCP_PORT: "2376"
  before_script:
    - docker info

.build::slim:
  after_script:
    - docker run -e DOCKER_HOST=tcp://$(grep docker /etc/hosts | cut -f1):2376 dslim/slim build $DOCKER_IMAGE_NAME

.build::reference:
  extends: .build::common
  before_script:
    - cp ./envs/.env.dev .env
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

.build::staging:
  extends: .build::common
  before_script:
    - cp ./envs/.env.staging .env
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build::production:
  extends: .build::common
  before_script:
    - cp ./envs/.env.prod .env
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_TAG
